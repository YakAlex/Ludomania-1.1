const btn_promo = document.getElementById('btn-promo');
const promo = document.getElementById('promo');
document.addEventListener('click', function (e) {
    if (!promo.contains(e.target) && !btn_promo.contains(e.target)) {
        promo.classList.remove('active');
    }
});


btn_promo.addEventListener('click', function (e)  {
    e.preventDefault();
    if (promo.classList.contains('active')) {
        promo.classList.remove('active');

        // –ó–∞—Ç—Ä–∏–º–∫–∞ –ø–µ—Ä–µ–¥ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è–º display: none
        setTimeout(() => {
            promo.style.display = 'none';
        }, 500); // –ß–∞—Å –ø–æ–≤–∏–Ω–µ–Ω –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ —Ç—Ä–∏–≤–∞–ª–æ—Å—Ç—ñ –∞–Ω—ñ–º–∞—Ü—ñ—ó
    } else {
        promo.style.display = 'flex'; // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ display: flex
        setTimeout(() => {
            promo.classList.add('active'); // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å –ø—ñ—Å–ª—è –∫–æ—Ä–æ—Ç–∫–æ—ó –∑–∞—Ç—Ä–∏–º–∫–∏
        }, 10); // –ù–µ–≤–µ–ª–∏–∫–∞ –∑–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó transition
    }
});


document.addEventListener('DOMContentLoaded', async function () {
    const userId = 'user1'; // –Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    const spinCost = 10;    // –í–∞—Ä—Ç—ñ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–∫—Ä—É—Ç—É
    const winReward = 500;  // –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞ –∑–∞ –≤–∏–≥—Ä–∞—à

    const balanceElement = document.querySelector('#balance');
    const resultElement = document.querySelector('#result');

    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∑ —Å–µ—Ä–≤–µ—Ä–∞
    async function fetchBalance() {
        const response = await fetch(`http://localhost:3000/api/balance?userId=${userId}`);
        const data = await response.json();
        if (data.success) {
            return data.balance;
        } else {
            throw new Error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É');
        }
    }

    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
    async function updateBalance(newBalance) {
        const response = await fetch('http://localhost:3000/api/balance', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ userId, amount: newBalance }),
        });
        const data = await response.json();
        if (!data.success) throw new Error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É');
    }

    // –§—É–Ω–∫—Ü—ñ—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
    async function updateBalanceDisplay() {
        const balance = await fetchBalance();
        balanceElement.textContent = `–ë–∞–ª–∞–Ω—Å: ${balance.toFixed(2)}`;
    }

    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±–µ—Ä—Ç–∞–Ω–Ω—è —Å–ª–æ—Ç—ñ–≤
    async function spinSlots() {
        const slot1 = document.getElementById('slot1');
        const slot2 = document.getElementById('slot2');
        const slot3 = document.getElementById('slot3');

        let balance = await fetchBalance();

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å—É
        if (balance < spinCost) {
            resultElement.textContent = '–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –¥–ª—è –≥—Ä–∏!';
            return;
        }

        // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
        balance -= spinCost;
        await updateBalance(balance);

        // –ì–µ–Ω–µ—Ä—É—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤—ñ —Å–∏–º–≤–æ–ª–∏
        const symbols = ['üçí', 'üçã', 'üçâ', 'üçä', 'üçì', 'üçç', 'üíé'];
        const getRandomSymbol = () => symbols[Math.floor(Math.random() * symbols.length)];

        const symbol1 = getRandomSymbol();
        const symbol2 = getRandomSymbol();
        const symbol3 = getRandomSymbol();

        slot1.textContent = symbol1;
        slot2.textContent = symbol2;
        slot3.textContent = symbol3;

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∏–≥—Ä–∞—à—É
        if (symbol1 === symbol2 && symbol2 === symbol3) {
            resultElement.textContent = '–í–∏–≥—Ä–∞—à! üéâ';
            balance += winReward;
            await updateBalance(balance);
        } else {
            resultElement.textContent = '–°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑!';
        }

        await updateBalanceDisplay();
    }

    // –ü—Ä–∏–≤‚Äô—è–∑–∫–∞ –∫–Ω–æ–ø–∫–∏ –¥–æ —Ñ—É–Ω–∫—Ü—ñ—ó
    document.getElementById('spinBtn').addEventListener('click', spinSlots);

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–∞–ª–∞–Ω—Å—É
    await updateBalanceDisplay();
});

